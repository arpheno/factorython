# generated by datamodel-codegen:
#   filename:  assembly_machine.json
#   timestamp: 2023-07-08T07:11:21+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, Field


class Minable(BaseModel):
    mining_time: float
    result: str
    hardness: Optional[float] = None


class Resistance(BaseModel):
    type: str
    percent: int


class DamagedTriggerEffect(BaseModel):
    type: str
    entity_name: str
    offset_deviation: List[List[float]]
    offsets: List[List[int]]
    damage_type_filters: Optional[str] = None


class Stripe(BaseModel):
    filename: str
    width_in_frames: int
    height_in_frames: int


class HrVersion(BaseModel):
    filename: Optional[str] = None
    priority: Optional[str] = None
    width: int
    height: int
    frame_count: Optional[int] = None
    line_length: Optional[int] = None
    shift: List[float]
    scale: float
    repeat_count: Optional[int] = None
    draw_as_shadow: Optional[bool] = None
    animation_speed: Optional[float] = None
    stripes: Optional[List[Stripe]] = None


class Layer(BaseModel):
    filename: Optional[str] = None
    priority: Optional[str] = None
    width: float
    height: float
    frame_count: Optional[int] = None
    line_length: Optional[int] = None
    shift: List[float]
    hr_version: Optional[HrVersion] = None
    repeat_count: Optional[int] = None
    draw_as_shadow: Optional[bool] = None
    animation_speed: Optional[float] = None
    stripes: Optional[List[Stripe]] = None
    scale: Optional[float] = None


class HrVersion1(BaseModel):
    filename: str
    priority: Optional[str] = None
    x: Optional[int] = None
    y: Optional[int] = None
    width: int
    height: int
    frame_count: Optional[int] = None
    shift: List[float]
    scale: float
    draw_as_shadow: Optional[bool] = None
    force_hr_shadow: Optional[bool] = None
    line_length: Optional[int] = None
    repeat_count: Optional[int] = None
    run_mode: Optional[str] = None
    animation_speed: Optional[float] = None


class Layer1(BaseModel):
    filename: str
    priority: Optional[str] = None
    x: Optional[int] = None
    y: Optional[int] = None
    width: int
    height: int
    frame_count: Optional[int] = None
    shift: List[float]
    scale: Optional[float] = None
    hr_version: HrVersion1
    draw_as_shadow: Optional[bool] = None
    line_length: Optional[int] = None
    repeat_count: Optional[int] = None
    run_mode: Optional[str] = None
    animation_speed: Optional[float] = None


class North(BaseModel):
    layers: List[Layer1]


class Layer2(BaseModel):
    filename: str
    priority: Optional[str] = None
    x: Optional[int] = None
    y: Optional[int] = None
    width: int
    height: int
    frame_count: Optional[int] = None
    shift: List[float]
    scale: Optional[float] = None
    hr_version: HrVersion1
    draw_as_shadow: Optional[bool] = None
    line_length: Optional[int] = None
    repeat_count: Optional[int] = None
    run_mode: Optional[str] = None
    animation_speed: Optional[float] = None


class East(BaseModel):
    layers: List[Layer2]


class HrVersion3(BaseModel):
    filename: str
    priority: Optional[str] = None
    x: Optional[int] = None
    y: Optional[int] = None
    width: int
    height: int
    frame_count: Optional[int] = None
    shift: Optional[List[float]] = None
    scale: float
    draw_as_shadow: Optional[bool] = None
    force_hr_shadow: Optional[bool] = None
    line_length: Optional[int] = None
    repeat_count: Optional[int] = None
    run_mode: Optional[str] = None
    animation_speed: Optional[float] = None


class Layer3(BaseModel):
    filename: str
    priority: Optional[str] = None
    x: Optional[int] = None
    y: Optional[int] = None
    width: int
    height: int
    frame_count: Optional[int] = None
    shift: Optional[List[float]] = None
    scale: Optional[float] = None
    hr_version: HrVersion3
    draw_as_shadow: Optional[bool] = None
    line_length: Optional[int] = None
    repeat_count: Optional[int] = None
    run_mode: Optional[str] = None
    animation_speed: Optional[float] = None


class South(BaseModel):
    layers: List[Layer3]


class HrVersion4(BaseModel):
    filename: str
    priority: Optional[str] = None
    x: Optional[int] = None
    y: Optional[int] = None
    width: int
    height: int
    frame_count: Optional[int] = None
    shift: List[float]
    scale: float
    draw_as_shadow: Optional[bool] = None
    force_hr_shadow: Optional[bool] = None
    line_length: Optional[int] = None
    repeat_count: Optional[int] = None
    run_mode: Optional[str] = None
    animation_speed: Optional[float] = None


class Layer4(BaseModel):
    filename: str
    priority: Optional[str] = None
    x: Optional[int] = None
    y: Optional[int] = None
    width: int
    height: int
    frame_count: Optional[int] = None
    shift: List[float]
    scale: Optional[float] = None
    hr_version: HrVersion4
    draw_as_shadow: Optional[bool] = None
    line_length: Optional[int] = None
    repeat_count: Optional[int] = None
    run_mode: Optional[str] = None
    animation_speed: Optional[float] = None


class West(BaseModel):
    layers: List[Layer4]


class Animation(BaseModel):
    layers: Optional[List[Layer]] = None
    north: Optional[North] = None
    east: Optional[East] = None
    south: Optional[South] = None
    west: Optional[West] = None


class LightFlicker(BaseModel):
    minimum_light_size: int
    light_intensity_to_size_coefficient: Optional[float] = None
    color: List[float]
    minimum_intensity: float
    maximum_intensity: float


class SmokeItem(BaseModel):
    name: str
    deviation: List[float]
    position: List[float]
    frequency: int


class EnergySource(BaseModel):
    type: str
    usage_priority: Optional[str] = None
    emissions_per_minute: Optional[float] = None
    fuel_categories: Optional[List[str]] = None
    effectivity: Optional[float] = None
    fuel_inventory_size: Optional[int] = None
    light_flicker: Optional[LightFlicker] = None
    smoke: Optional[List[SmokeItem]] = None
    fuel_category: Optional[str] = None
    buffer_capacity: Optional[str] = None
    input_flow_limit: Optional[str] = None
    output_flow_limit: Optional[str] = None
    drain: Optional[str] = None


class OpenSoundItem(BaseModel):
    filename: str
    volume: float


class CloseSoundItem(BaseModel):
    filename: str
    volume: float


class VehicleImpactSoundItem(BaseModel):
    filename: str
    volume: float


class SoundItem(BaseModel):
    filename: str
    volume: float


class SoundItem1(BaseModel):
    filename: str
    volume: Optional[float] = None
    audible_distance_modifier: Optional[int] = None


class IdleSound(BaseModel):
    filename: str
    volume: float
    audible_distance_modifier: Optional[int] = None


class WorkingSound(BaseModel):
    sound: Union[List[SoundItem], SoundItem1]
    audible_distance_modifier: Optional[float] = None
    fade_in_ticks: Optional[int] = None
    fade_out_ticks: Optional[int] = None
    apparent_volume: Optional[float] = None
    idle_sound: Optional[IdleSound] = None
    max_sounds_per_type: Optional[int] = None


class Disabled(BaseModel):
    r: int


class FullOutput(BaseModel):
    r: int
    g: int


class Idle(BaseModel):
    r: int


class InsufficientInput(BaseModel):
    r: int


class LowPower(BaseModel):
    r: int
    g: int


class NoMinableResources(BaseModel):
    r: int


class NoPower(BaseModel):
    r: int


class Working(BaseModel):
    g: int


class StatusColors(BaseModel):
    disabled: Disabled
    full_output: FullOutput
    idle: Idle
    insufficient_input: InsufficientInput
    low_power: LowPower
    no_minable_resources: NoMinableResources
    no_power: NoPower
    working: Working


class HrVersion5(BaseModel):
    filename: str
    line_length: Optional[int] = None
    width: int
    height: int
    frame_count: Optional[int] = None
    animation_speed: Optional[float] = None
    scale: float
    shift: List[float]
    priority: Optional[str] = None
    draw_as_glow: Optional[bool] = None
    blend_mode: Optional[str] = None
    max_advance: Optional[int] = None


class HrVersion6(BaseModel):
    filename: str
    priority: str
    scale: float
    blend_mode: Optional[str] = None
    line_length: Optional[int] = None
    width: int
    height: int
    frame_count: int
    shift: List[float]
    animation_speed: Optional[float] = None
    draw_as_glow: Optional[bool] = None


class Tint(BaseModel):
    r: int
    g: int
    b: int
    a: int


class HrVersion7(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    repeat_count: int
    shift: List[float]
    tint: Optional[Tint] = None
    animation_speed: Optional[float] = None
    scale: float
    draw_as_shadow: Optional[bool] = None


class Layer6(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    repeat_count: int
    shift: List[float]
    tint: Optional[Tint] = None
    animation_speed: Optional[float] = None
    scale: int
    hr_version: HrVersion7
    draw_as_shadow: Optional[bool] = None


class Layer5(BaseModel):
    filename: Optional[str] = None
    priority: Optional[str] = None
    blend_mode: Optional[str] = None
    line_length: Optional[int] = None
    width: Optional[int] = None
    height: Optional[int] = None
    frame_count: Optional[int] = None
    shift: Optional[List[float]] = None
    hr_version: Optional[HrVersion6] = None
    animation_speed: Optional[float] = None
    layers: Optional[List[Layer6]] = None
    draw_as_glow: Optional[bool] = None
    scale: Optional[int] = None


class Animation1(BaseModel):
    filename: Optional[str] = None
    flags: Optional[List[str]] = None
    size: Optional[int] = None
    scale: Optional[float] = None
    line_length: Optional[int] = None
    frame_count: Optional[int] = None
    animation_speed: Optional[float] = None
    direction_count: Optional[int] = None
    width: Optional[int] = None
    height: Optional[int] = None
    shift: Optional[List[float]] = None
    hr_version: Optional[HrVersion5] = None
    layers: Optional[List[Layer5]] = None
    priority: Optional[str] = None
    draw_as_glow: Optional[bool] = None
    blend_mode: Optional[str] = None
    repeat_count: Optional[int] = None
    max_advance: Optional[int] = None


class HrVersion8(BaseModel):
    filename: str
    width: int
    height: int
    blend_mode: Optional[str] = None
    shift: List[float]
    scale: float
    frame_count: Optional[int] = None
    line_length: Optional[int] = None


class HrVersion9(BaseModel):
    filename: str
    width: int
    height: int
    priority: str
    shift: List[float]
    scale: float
    blend_mode: str


class Layer7(BaseModel):
    draw_as_glow: Optional[bool] = None
    blend_mode: str
    filename: str
    priority: str
    width: int
    height: int
    frame_count: Optional[int] = None
    line_length: Optional[int] = None
    shift: List[float]
    scale: Optional[float] = None
    hr_version: Optional[HrVersion9] = None


class NorthAnimation(BaseModel):
    filename: Optional[str] = None
    width: Optional[int] = None
    height: Optional[int] = None
    blend_mode: Optional[str] = None
    shift: Optional[List[float]] = None
    hr_version: Optional[HrVersion8] = None
    frame_count: Optional[int] = None
    line_length: Optional[int] = None
    layers: Optional[List[Layer7]] = None


class HrVersion10(BaseModel):
    filename: str
    width: int
    x: Optional[int] = None
    height: int
    blend_mode: Optional[str] = None
    shift: List[float]
    scale: float
    frame_count: Optional[int] = None
    line_length: Optional[int] = None


class HrVersion11(BaseModel):
    filename: str
    width: int
    height: int
    priority: str
    shift: List[float]
    scale: float
    blend_mode: str


class Layer8(BaseModel):
    draw_as_glow: Optional[bool] = None
    blend_mode: str
    filename: str
    priority: str
    x: Optional[int] = None
    width: int
    height: int
    frame_count: Optional[int] = None
    line_length: Optional[int] = None
    shift: List[float]
    scale: Optional[float] = None
    hr_version: Optional[HrVersion11] = None


class EastAnimation(BaseModel):
    filename: Optional[str] = None
    width: Optional[int] = None
    x: Optional[int] = None
    height: Optional[int] = None
    blend_mode: Optional[str] = None
    shift: Optional[List[float]] = None
    hr_version: Optional[HrVersion10] = None
    frame_count: Optional[int] = None
    line_length: Optional[int] = None
    layers: Optional[List[Layer8]] = None


class HrVersion12(BaseModel):
    filename: str
    width: int
    x: Optional[int] = None
    height: int
    blend_mode: Optional[str] = None
    shift: List[float]
    scale: float
    frame_count: Optional[int] = None
    line_length: Optional[int] = None


class HrVersion13(BaseModel):
    filename: str
    width: int
    height: int
    priority: str
    shift: List[float]
    scale: float
    blend_mode: str


class Layer9(BaseModel):
    draw_as_glow: Optional[bool] = None
    blend_mode: str
    filename: str
    priority: str
    width: int
    height: int
    frame_count: Optional[int] = None
    line_length: Optional[int] = None
    shift: List[float]
    scale: Optional[float] = None
    hr_version: Optional[HrVersion13] = None


class SouthAnimation(BaseModel):
    filename: Optional[str] = None
    width: Optional[int] = None
    x: Optional[int] = None
    height: Optional[int] = None
    blend_mode: Optional[str] = None
    shift: Optional[List[float]] = None
    hr_version: Optional[HrVersion12] = None
    frame_count: Optional[int] = None
    line_length: Optional[int] = None
    layers: Optional[List[Layer9]] = None


class HrVersion14(BaseModel):
    filename: str
    width: int
    x: Optional[int] = None
    height: int
    blend_mode: Optional[str] = None
    shift: List[float]
    scale: float
    frame_count: Optional[int] = None
    line_length: Optional[int] = None


class HrVersion15(BaseModel):
    filename: str
    width: int
    height: int
    priority: str
    shift: List[float]
    scale: float
    blend_mode: str


class Layer10(BaseModel):
    draw_as_glow: Optional[bool] = None
    blend_mode: str
    filename: str
    priority: str
    x: Optional[int] = None
    width: int
    height: int
    frame_count: Optional[int] = None
    line_length: Optional[int] = None
    shift: List[float]
    scale: Optional[float] = None
    hr_version: Optional[HrVersion15] = None


class WestAnimation(BaseModel):
    filename: Optional[str] = None
    width: Optional[int] = None
    x: Optional[int] = None
    height: Optional[int] = None
    blend_mode: Optional[str] = None
    shift: Optional[List[float]] = None
    hr_version: Optional[HrVersion14] = None
    frame_count: Optional[int] = None
    line_length: Optional[int] = None
    layers: Optional[List[Layer10]] = None


class Color(BaseModel):
    r: float
    g: float
    b: float


class Light(BaseModel):
    intensity: float
    size: float
    shift: Optional[List[int]] = None
    color: Color


class WorkingVisualisation(BaseModel):
    always_draw: Optional[bool] = None
    apply_tint: Optional[str] = None
    draw_as_light: Optional[bool] = None
    draw_as_sprite: Optional[bool] = None
    render_layer: Optional[str] = None
    animation: Optional[Animation1] = None
    north_position: Optional[List[float]] = None
    east_position: Optional[List[float]] = None
    south_position: Optional[List[float]] = None
    west_position: Optional[List[float]] = None
    fadeout: Optional[bool] = None
    constant_speed: Optional[bool] = None
    north_animation: Optional[NorthAnimation] = None
    east_animation: Optional[EastAnimation] = None
    south_animation: Optional[SouthAnimation] = None
    west_animation: Optional[WestAnimation] = None
    apply_recipe_tint: Optional[str] = None
    effect: Optional[str] = None
    light: Optional[Light] = None
    draw_as_glow: Optional[bool] = None


class HrVersion16(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    shift: List[float]
    scale: float


class North1(BaseModel):
    filename: str
    priority: Optional[str] = None
    width: int
    height: int
    shift: List[float]
    hr_version: HrVersion16
    scale: Optional[int] = None


class East1(BaseModel):
    filename: str
    priority: Optional[str] = None
    width: int
    height: int
    shift: List[float]
    hr_version: HrVersion16
    scale: Optional[int] = None


class South1(BaseModel):
    filename: str
    priority: Optional[str] = None
    width: int
    height: int
    shift: List[float]
    hr_version: HrVersion16
    scale: Optional[int] = None


class West1(BaseModel):
    filename: str
    priority: Optional[str] = None
    width: int
    height: int
    shift: List[float]
    hr_version: HrVersion16
    scale: Optional[int] = None


class PipePicture(BaseModel):
    north: North1
    east: East1
    south: South1
    west: West1


class HrVersion20(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    scale: float
    draw_as_shadow: Optional[bool] = None


class Layer11(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion20
    draw_as_shadow: Optional[bool] = None


class North2(BaseModel):
    layers: List[Layer11]


class Layer12(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion20
    draw_as_shadow: Optional[bool] = None


class East2(BaseModel):
    layers: List[Layer12]


class Layer13(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion20
    draw_as_shadow: Optional[bool] = None


class South2(BaseModel):
    layers: List[Layer13]


class Layer14(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion20
    draw_as_shadow: Optional[bool] = None


class West2(BaseModel):
    layers: List[Layer14]


class PipeCovers(BaseModel):
    north: North2
    east: East2
    south: South2
    west: West2


class PipeConnection(BaseModel):
    type: str
    position: List[float]


class SecondaryDrawOrders(BaseModel):
    north: int
    east: Optional[int] = None
    west: Optional[int] = None


class Field1(BaseModel):
    production_type: str
    pipe_picture: Optional[PipePicture] = None
    pipe_covers: PipeCovers
    base_area: int
    base_level: int
    pipe_connections: List[PipeConnection]
    secondary_draw_orders: Optional[SecondaryDrawOrders] = None
    height: Optional[int] = None
    filter: Optional[str] = None


class HrVersion24(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    shift: List[float]
    scale: float


class North3(BaseModel):
    filename: str
    priority: Optional[str] = None
    width: int
    height: int
    shift: List[float]
    hr_version: HrVersion24
    scale: Optional[int] = None


class East3(BaseModel):
    filename: str
    priority: Optional[str] = None
    width: int
    height: int
    shift: List[float]
    hr_version: HrVersion24
    scale: Optional[int] = None


class South3(BaseModel):
    filename: str
    priority: Optional[str] = None
    width: int
    height: int
    shift: List[float]
    hr_version: HrVersion24
    scale: Optional[int] = None


class West3(BaseModel):
    filename: str
    priority: Optional[str] = None
    width: int
    height: int
    shift: List[float]
    hr_version: HrVersion24
    scale: Optional[int] = None


class PipePicture1(BaseModel):
    north: North3
    east: East3
    south: South3
    west: West3


class HrVersion28(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    scale: float
    draw_as_shadow: Optional[bool] = None


class Layer15(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion28
    draw_as_shadow: Optional[bool] = None


class North4(BaseModel):
    layers: List[Layer15]


class Layer16(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion28
    draw_as_shadow: Optional[bool] = None


class East4(BaseModel):
    layers: List[Layer16]


class Layer17(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion28
    draw_as_shadow: Optional[bool] = None


class South4(BaseModel):
    layers: List[Layer17]


class Layer18(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion28
    draw_as_shadow: Optional[bool] = None


class West4(BaseModel):
    layers: List[Layer18]


class PipeCovers1(BaseModel):
    north: North4
    east: East4
    south: South4
    west: West4


class Field2(BaseModel):
    production_type: str
    pipe_picture: Optional[PipePicture1] = None
    pipe_covers: PipeCovers1
    base_area: int
    base_level: int
    pipe_connections: List[PipeConnection]
    secondary_draw_orders: Optional[SecondaryDrawOrders] = None
    height: Optional[int] = None
    filter: Optional[str] = None


class HrVersion32(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: float
    priority: str


class East5(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: int
    hr_version: HrVersion32


class HrVersion33(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: float
    priority: str


class North5(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: int
    hr_version: HrVersion33


class South5(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: int
    hr_version: HrVersion33


class HrVersion35(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: float
    priority: str


class West5(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: int
    hr_version: HrVersion35


class PipePicture2(BaseModel):
    east: East5
    north: North5
    south: South5
    west: West5


class HrVersion36(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    scale: float
    draw_as_shadow: Optional[bool] = None


class Layer19(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion36
    draw_as_shadow: Optional[bool] = None


class North6(BaseModel):
    layers: List[Layer19]


class Layer20(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion36
    draw_as_shadow: Optional[bool] = None


class East6(BaseModel):
    layers: List[Layer20]


class Layer21(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion36
    draw_as_shadow: Optional[bool] = None


class South6(BaseModel):
    layers: List[Layer21]


class Layer22(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion36
    draw_as_shadow: Optional[bool] = None


class West6(BaseModel):
    layers: List[Layer22]


class PipeCovers2(BaseModel):
    north: North6
    east: East6
    south: South6
    west: West6


class PipeConnection2(BaseModel):
    type: str
    position: List[int]


class SecondaryDrawOrders2(BaseModel):
    north: int
    east: int
    west: int


class Field3(BaseModel):
    production_type: str
    pipe_picture: PipePicture2
    pipe_covers: PipeCovers2
    base_area: int
    base_level: int
    pipe_connections: List[PipeConnection2]
    secondary_draw_orders: SecondaryDrawOrders2


class HrVersion40(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: float
    priority: str


class East7(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: int
    hr_version: HrVersion40


class HrVersion41(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: float
    priority: str


class North7(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: int
    hr_version: HrVersion41


class South7(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: int
    hr_version: HrVersion41


class HrVersion43(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: float
    priority: str


class West7(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: int
    hr_version: HrVersion43


class PipePicture3(BaseModel):
    east: East7
    north: North7
    south: South7
    west: West7


class HrVersion44(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    scale: float
    draw_as_shadow: Optional[bool] = None


class Layer23(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion44
    draw_as_shadow: Optional[bool] = None


class North8(BaseModel):
    layers: List[Layer23]


class Layer24(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion44
    draw_as_shadow: Optional[bool] = None


class East8(BaseModel):
    layers: List[Layer24]


class Layer25(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion44
    draw_as_shadow: Optional[bool] = None


class South8(BaseModel):
    layers: List[Layer25]


class Layer26(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion44
    draw_as_shadow: Optional[bool] = None


class West8(BaseModel):
    layers: List[Layer26]


class PipeCovers3(BaseModel):
    north: North8
    east: East8
    south: South8
    west: West8


class Field4(BaseModel):
    production_type: str
    pipe_picture: PipePicture3
    pipe_covers: PipeCovers3
    base_area: int
    base_level: int
    pipe_connections: List[PipeConnection2]
    secondary_draw_orders: SecondaryDrawOrders2


class HrVersion48(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: float
    priority: str


class East9(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: int
    hr_version: HrVersion48


class HrVersion49(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: float
    priority: str


class North9(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: int
    hr_version: HrVersion49


class South9(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: int
    hr_version: HrVersion49


class HrVersion51(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: float
    priority: str


class West9(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: int
    hr_version: HrVersion51


class PipePicture4(BaseModel):
    east: East9
    north: North9
    south: South9
    west: West9


class HrVersion52(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    scale: float
    draw_as_shadow: Optional[bool] = None


class Layer27(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion52
    draw_as_shadow: Optional[bool] = None


class North10(BaseModel):
    layers: List[Layer27]


class Layer28(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion52
    draw_as_shadow: Optional[bool] = None


class East10(BaseModel):
    layers: List[Layer28]


class Layer29(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion52
    draw_as_shadow: Optional[bool] = None


class South10(BaseModel):
    layers: List[Layer29]


class Layer30(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion52
    draw_as_shadow: Optional[bool] = None


class West10(BaseModel):
    layers: List[Layer30]


class PipeCovers4(BaseModel):
    north: North10
    east: East10
    south: South10
    west: West10


class Field5(BaseModel):
    production_type: str
    pipe_picture: PipePicture4
    pipe_covers: PipeCovers4
    base_area: int
    base_level: int
    pipe_connections: List[PipeConnection2]
    secondary_draw_orders: SecondaryDrawOrders2


class HrVersion56(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: float
    priority: str


class East11(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: int
    hr_version: HrVersion56


class HrVersion57(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: float
    priority: str


class North11(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: int
    hr_version: HrVersion57


class South11(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: int
    hr_version: HrVersion57


class HrVersion59(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: float
    priority: str


class West11(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: int
    hr_version: HrVersion59


class PipePicture5(BaseModel):
    east: East11
    north: North11
    south: South11
    west: West11


class HrVersion60(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    scale: float
    draw_as_shadow: Optional[bool] = None


class Layer31(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion60
    draw_as_shadow: Optional[bool] = None


class North12(BaseModel):
    layers: List[Layer31]


class Layer32(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion60
    draw_as_shadow: Optional[bool] = None


class East12(BaseModel):
    layers: List[Layer32]


class Layer33(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion60
    draw_as_shadow: Optional[bool] = None


class South12(BaseModel):
    layers: List[Layer33]


class Layer34(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion60
    draw_as_shadow: Optional[bool] = None


class West12(BaseModel):
    layers: List[Layer34]


class PipeCovers5(BaseModel):
    north: North12
    east: East12
    south: South12
    west: West12


class Field6(BaseModel):
    production_type: str
    pipe_picture: PipePicture5
    pipe_covers: PipeCovers5
    base_area: int
    base_level: int
    pipe_connections: List[PipeConnection2]
    secondary_draw_orders: SecondaryDrawOrders2


class HrVersion64(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: float
    priority: str


class East13(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: int
    hr_version: HrVersion64


class HrVersion65(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: float
    priority: str


class North13(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: int
    hr_version: HrVersion65


class South13(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: int
    hr_version: HrVersion65


class HrVersion67(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: float
    priority: str


class West13(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: int
    hr_version: HrVersion67


class PipePicture6(BaseModel):
    east: East13
    north: North13
    south: South13
    west: West13


class HrVersion68(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    scale: float
    draw_as_shadow: Optional[bool] = None


class Layer35(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion68
    draw_as_shadow: Optional[bool] = None


class North14(BaseModel):
    layers: List[Layer35]


class Layer36(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion68
    draw_as_shadow: Optional[bool] = None


class East14(BaseModel):
    layers: List[Layer36]


class Layer37(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion68
    draw_as_shadow: Optional[bool] = None


class South14(BaseModel):
    layers: List[Layer37]


class Layer38(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion68
    draw_as_shadow: Optional[bool] = None


class West14(BaseModel):
    layers: List[Layer38]


class PipeCovers6(BaseModel):
    north: North14
    east: East14
    south: South14
    west: West14


class Field7(BaseModel):
    production_type: str
    pipe_picture: PipePicture6
    pipe_covers: PipeCovers6
    base_area: int
    base_level: int
    pipe_connections: List[PipeConnection2]
    secondary_draw_orders: SecondaryDrawOrders2


class HrVersion72(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: float
    priority: str


class East15(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: int
    hr_version: HrVersion72


class HrVersion73(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: float
    priority: str


class North15(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: int
    hr_version: HrVersion73


class South15(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[float]
    scale: int
    hr_version: HrVersion73


class HrVersion75(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: float
    priority: str


class West15(BaseModel):
    filename: str
    width: int
    height: int
    shift: List[int]
    scale: int
    hr_version: HrVersion75


class PipePicture7(BaseModel):
    east: East15
    north: North15
    south: South15
    west: West15


class HrVersion76(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    scale: float
    draw_as_shadow: Optional[bool] = None


class Layer39(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion76
    draw_as_shadow: Optional[bool] = None


class North16(BaseModel):
    layers: List[Layer39]


class Layer40(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion76
    draw_as_shadow: Optional[bool] = None


class East16(BaseModel):
    layers: List[Layer40]


class Layer41(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion76
    draw_as_shadow: Optional[bool] = None


class South16(BaseModel):
    layers: List[Layer41]


class Layer42(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion76
    draw_as_shadow: Optional[bool] = None


class West16(BaseModel):
    layers: List[Layer42]


class PipeCovers7(BaseModel):
    north: North16
    east: East16
    south: South16
    west: West16


class Field8(BaseModel):
    production_type: str
    pipe_picture: PipePicture7
    pipe_covers: PipeCovers7
    base_area: int
    base_level: int
    pipe_connections: List[PipeConnection2]
    secondary_draw_orders: SecondaryDrawOrders2


class FluidBox(BaseModel):
    field_1: Field1 = Field(..., alias='1')
    field_2: Field2 = Field(..., alias='2')
    off_when_no_fluid_recipe: bool
    field_3: Optional[Field3] = Field(None, alias='3')
    field_4: Optional[Field4] = Field(None, alias='4')
    field_5: Optional[Field5] = Field(None, alias='5')
    field_6: Optional[Field6] = Field(None, alias='6')
    field_7: Optional[Field7] = Field(None, alias='7')
    field_8: Optional[Field8] = Field(None, alias='8')


class Layer43(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion76
    draw_as_shadow: Optional[bool] = None


class North17(BaseModel):
    layers: List[Layer43]


class Layer44(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion76
    draw_as_shadow: Optional[bool] = None


class East17(BaseModel):
    layers: List[Layer44]


class Layer45(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion76
    draw_as_shadow: Optional[bool] = None


class South17(BaseModel):
    layers: List[Layer45]


class Layer46(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    hr_version: HrVersion76
    draw_as_shadow: Optional[bool] = None


class West17(BaseModel):
    layers: List[Layer46]


class PipeCovers8(BaseModel):
    north: North17
    east: East17
    south: South17
    west: West17


class PipeConnection8(BaseModel):
    type: Optional[str] = None
    position: List[float]


class SecondaryDrawOrders8(BaseModel):
    north: int
    east: Optional[int] = None
    west: Optional[int] = None


class HrVersion84(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    shift: List[float]
    scale: float


class North18(BaseModel):
    filename: str
    priority: Optional[str] = None
    width: int
    height: int
    shift: List[float]
    hr_version: Optional[HrVersion84] = None
    frame_count: Optional[int] = None
    line_length: Optional[int] = None


class East18(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    shift: List[float]
    hr_version: HrVersion84


class South18(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    shift: List[float]
    hr_version: HrVersion84


class West18(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    shift: List[float]
    hr_version: HrVersion84


class PipePicture8(BaseModel):
    north: North18
    east: East18
    south: South18
    west: West18


class FluidBox1(BaseModel):
    production_type: str
    # pipe_covers: Optional[PipeCovers8] = None
    base_area: Optional[int] = None
    base_level: int
    pipe_connections: List[PipeConnection8]
    height: Optional[int] = None
    # secondary_draw_orders: Optional[SecondaryDrawOrders8] = None
    # pipe_picture: Optional[PipePicture8] = None


class ModuleSpecification(BaseModel):
    module_slots: int


class Pictures(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    shift: List[float]
    variation_count: int
    scale: int


class WaterReflection(BaseModel):
    pictures: Pictures
    rotate: bool
    orientation_to_variation: bool


class HrVersion88(BaseModel):
    filename: str
    priority: Optional[str] = None
    scale: float
    line_length: Optional[int] = None
    width: int
    height: int
    frame_count: Optional[int] = None
    shift: List[float]
    draw_as_shadow: Optional[bool] = None
    repeat_count: Optional[int] = None
    animation_speed: Optional[float] = None


class Layer47(BaseModel):
    filename: str
    priority: Optional[str] = None
    line_length: Optional[int] = None
    width: float
    height: float
    frame_count: Optional[int] = None
    shift: List[float]
    hr_version: HrVersion88
    draw_as_shadow: Optional[bool] = None
    repeat_count: Optional[int] = None
    animation_speed: Optional[float] = None
    scale: Optional[int] = None


class Layer48(BaseModel):
    filename: str
    priority: str
    x: int
    width: int
    height: int
    frame_count: int
    line_length: int
    shift: List[float]
    scale: float
    draw_as_shadow: Optional[bool] = None


class East19(BaseModel):
    layers: List[Layer48]


class West19(BaseModel):
    layers: List[Layer48]


class Layer50(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    frame_count: int
    line_length: int
    shift: List[float]
    scale: float
    draw_as_shadow: Optional[bool] = None


class North19(BaseModel):
    layers: List[Layer50]


class South19(BaseModel):
    layers: List[Layer50]


class IdleAnimation(BaseModel):
    layers: Optional[List[Layer47]] = None
    east: Optional[East19] = None
    west: Optional[West19] = None
    north: Optional[North19] = None
    south: Optional[South19] = None


class Light1(BaseModel):
    intensity: int
    size: int


class Primary(BaseModel):
    r: float
    g: int
    b: float
    a: int


class Secondary(BaseModel):
    r: float
    g: int
    b: float
    a: int


class DefaultRecipeTint(BaseModel):
    primary: Primary
    secondary: Secondary


class HrVersion89(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    frame_count: int
    line_length: int
    shift: List[int]
    scale: float


class Layer52(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    frame_count: int
    line_length: int
    shift: List[int]
    scale: int
    hr_version: HrVersion89


class North20(BaseModel):
    layers: List[Layer52]


class Layer53(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    frame_count: int
    line_length: int
    shift: List[int]
    scale: int
    hr_version: HrVersion89


class East20(BaseModel):
    layers: List[Layer53]


class Layer54(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    frame_count: int
    line_length: int
    shift: List[int]
    scale: int
    hr_version: HrVersion89


class South20(BaseModel):
    layers: List[Layer54]


class Layer55(BaseModel):
    filename: str
    priority: str
    width: int
    height: int
    frame_count: int
    line_length: int
    shift: List[int]
    scale: int
    hr_version: HrVersion89


class West20(BaseModel):
    layers: List[Layer55]


class IntegrationPatch(BaseModel):
    north: North20
    east: East20
    south: South20
    west: West20


class PlaceableBy(BaseModel):
    item: str
    count: int


class AssemblingMachine(BaseModel):
    type: str
    name: str
    icon: str
    icon_size: int
    icon_mipmaps: Optional[int] = None
    flags: List[str]
    minable: Optional[Minable] = None
    max_health: int
    corpse: str
    dying_explosion: Optional[str] = None
    resistances: Optional[Union[Dict[str, Any], List[Resistance]]] = None
    collision_box: List[List[float]]
    selection_box: List[List[float]]
    damaged_trigger_effect: Optional[DamagedTriggerEffect] = None
    fast_replaceable_group: Optional[str] = None
    next_upgrade: Optional[str] = None
    alert_icon_shift: Optional[List[float]] = None
    animation: Optional[Animation] = None
    crafting_categories: List[str]
    crafting_speed: float
    energy_source: EnergySource
    energy_usage: str
    open_sound: Optional[Union[List[OpenSoundItem], OpenSoundItem]] = None
    close_sound: Optional[Union[List[CloseSoundItem], CloseSoundItem]] = None
    vehicle_impact_sound: Union[List[VehicleImpactSoundItem], VehicleImpactSoundItem]
    working_sound: WorkingSound
    trigger_target_mask: List[str]
    collision_mask: List[str]
    status_colors: StatusColors
    working_visualisations: List[WorkingVisualisation]
    fluid_boxes: Optional[Union[FluidBox, List[FluidBox1]]] = None
    module_specification: Optional[ModuleSpecification] = None
    allowed_effects: Optional[Union[Dict[str, Any], List[str]]] = None
    drawing_box: Optional[List[List[float]]] = None
    scale_entity_info_icon: Optional[bool] = None
    water_reflection: Optional[WaterReflection] = None
    always_draw_idle_animation: Optional[bool] = None
    idle_animation: Optional[IdleAnimation] = None
    fixed_recipe: Optional[str] = None
    light: Optional[Light1] = None
    result_inventory_size: Optional[int] = None
    source_inventory_size: Optional[int] = None
    ingredient_count: Optional[int] = None
    se_allow_in_space: Optional[bool] = None
    default_recipe_tint: Optional[DefaultRecipeTint] = None
    has_backer_name: Optional[bool] = None
    order: Optional[str] = None
    module_slots: Optional[int] = None
    target_temperature: Optional[int] = None
    allow_copy_paste: Optional[bool] = None
    display_box: Optional[List[List[int]]] = None
    selection_priority: Optional[int] = None
    build_grid_size: Optional[int] = None
    integration_patch_render_layer: Optional[str] = None
    integration_patch: Optional[IntegrationPatch] = None
    squeak_behaviour: Optional[bool] = None
    show_recipe_icon: Optional[bool] = None
    localised_name: Optional[List[Union[str, List[str]]]] = None
    placeable_by: Optional[PlaceableBy] = None


